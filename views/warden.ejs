<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Warden Portal - Outpass Management System</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">

    <style>
        /* CSS Variables for Maintainability */
        :root {
            --primary-color: #6a11cb;
            --secondary-color: #2575fc;
            --background-gradient: linear-gradient(135deg, #20002c, #6f00ff);
            --glass-background: rgba(255, 255, 255, 0.1);
            --glass-border: rgba(255, 255, 255, 0.3);
            --text-color: white;
            --shadow: 0 0 20px rgba(255, 255, 255, 0.2);
            --glow-animation: glow 1.5s infinite alternate;
        }

        /* Background Animation */
        @keyframes moveBackground {
            0% {
                background-position: 0 0;
            }

            100% {
                background-position: 100% 100%;
            }
        }

        /* Glowing Animation */
        @keyframes glow {
            0% {
                box-shadow: 0 0 5px var(--primary-color), 0 0 10px var(--primary-color);
            }

            50% {
                box-shadow: 0 0 20px var(--primary-color), 0 0 40px var(--primary-color);
            }

            100% {
                box-shadow: 0 0 5px var(--primary-color), 0 0 10px var(--primary-color);
            }
        }
        
        /* Floating Animation */
        @keyframes float {
            0% {
                transform: translateY(0);
            }

            50% {
                transform: translateY(-10px);
            }

            100% {
                transform: translateY(0);
            }
        }

        /* Base Styles */
        body {
            margin: 0;
            padding: 0;
            font-family: 'Arial', sans-serif;
            background: var(--background-gradient);
            background-size: 200% 200%;
            animation: moveBackground 10s ease infinite;
            display: flex;
            flex-direction: column;
            height: 100vh;
            /* overflow: hidden; */
        }

        /* Header Styles */
        .header {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: var(--text-color);
            padding: 15px 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: var(--shadow);
            animation: float 4s ease-in-out infinite;
        }

        .header h1 {
            margin: 0;
            font-size: 24px;
            font-weight: 600;
            animation: var(--glow-animation);
        }

        .logout-btn {
            background: rgba(255, 255, 255, 0.2);
            border: none;
            padding: 8px 16px;
            border-radius: 5px;
            color: var(--text-color);
            cursor: pointer;
            transition: all 0.3s ease;
            font-family: 'Arial', sans-serif;
            font-weight: 500;
            animation: var(--glow-animation);
        }

        .logout-btn:hover {
            background: rgba(255, 255, 255, 0.3);
            transform: scale(1.05);
        }

        /* Main Container */
        .main-container {
            display: flex;
            flex: 1;
        }

        /* Sidebar Styles */
        .sidebar {
            width: 250px;
            background: rgba(44, 62, 80, 0.8);
            color: var(--text-color);
            padding: 20px;
            box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
        }

        .sidebar h2 {
            margin-top: 0;
            font-size: 20px;
            text-align: center;
        }
        .sidebar ul li a.active {
    background: var(--primary-color);
    font-weight: bold;
}

        .sidebar ul {
            list-style: none;
            padding: 0;
        }

        .sidebar ul li {
            margin: 15px 0;
        }

        .sidebar ul li a {
            color: var(--text-color);
            text-decoration: none;
            font-size: 16px;
            display: block;
            padding: 10px;
            border-radius: 5px;
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.1);
        }
        .sidebar ul li a i {
    margin-right: 10px;
    color: var(--secondary-color);
    width: 20px;
    text-align: center;
}
.sidebar ul li a:hover i {
    color: white;
}
.sidebar ul li a:hover i {
    filter: drop-shadow(0 0 5px var(--secondary-color));
}

        .sidebar ul li a:hover {
            background: var(--secondary-color);
            transform: scale(1.05);
            box-shadow: var(--glow-animation);
        }

        /* Main Content Styles */
        .main-content {
            flex: 1;
            padding: 20px;
            background: var(--glass-background);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            margin: 20px;
            box-shadow: var(--shadow);
        }
        
        .main-content h2 {
            margin-top: 0;
            color: var(--text-color);
        }

        /* Form Styles */
        .form-container {
            /* max-width: 600px; */
            margin: 0 auto;
            background: var(--glass-background);
            padding: 20px;
            border-radius: 10px;
            box-shadow: var(--shadow);
        }

        .form-container input,
        .form-container select {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            border: 1px solid var(--glass-border);
            border-radius: 5px;
            background: var(--glass-background);
            color: var(--text-color);
            transition: all 0.3s ease;
        }

        .form-container input::placeholder {
            color: rgba(255, 255, 255, 0.7);
        }

        .form-container input:hover,
        .form-container input:focus {
            border-color: var(--primary-color);
            box-shadow: var(--glow-animation);
        }

        .form-container button {
            background: linear-gradient(45deg, var(--primary-color), var(--secondary-color));
            color: var(--text-color);
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .form-container button:hover {
            background: linear-gradient(45deg, var(--secondary-color), var(--primary-color));
            transform: scale(1.05);
            box-shadow: var(--glow-animation);
        }

        /* Table Styles */
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        table th,
        table td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        table th {
            background: var(--primary-color);
            color: var(--text-color);
        }

        table tr:hover {
            background: rgba(255, 255, 255, 0.1);
        }
    </style>
</head>

<body>
    <!-- Header -->
    <div class="header">
        <h1>RGUKT Outpass Management System</h1>
        <form action="/logout" method="post"><button class="logout-btn">Logout</button></form>
    </div>

    <!-- Main Container -->
    <div class="main-container">
        <!-- Sidebar -->
        <div class="sidebar">
            <h2>Dashboard</h2>
            <ul>
                <li><a href="#" onclick="loadPage('outpass-request')"><i class="fas fa-file-alt"></i> Outpass Request</a></li>
                <li><a href="#" onclick="loadPage('today-status')"><i class="fas fa-calendar-day"></i> Today's Status</a></li>
                <li><a href="#" onclick="loadPage('past-data')"><i class="fas fa-history"></i> Past Data</a></li>
                <li><a href="#" onclick="loadPage('pending-students')"><i class="fas fa-user-clock"></i> Pending Students</a></li>
                <li><a href="#" onclick="loadPage('search')"><i class="fas fa-search"></i> Search</a></li>
            </ul>
            
        </div>

        <!-- Main Content -->
        <div class="main-content" id="main-content">
            <h2>Welcome to Warden Portal</h2>
            <p>Select an option from the sidebar to manage outpasses.</p>
        </div>
    </div>

    <script>
const outdata = async () => {
    const response = await fetch("/warden/data");
    const data = await response.json();
    return data;
};
let outing;
// Wrap in an async function
async function fetchData() {
    outing = await outdata();
    console.log(outing); // Logs the outpass data in the console
}
// Call the function
fetchData();

        // Data Storage
0
        // Function to load pages dynamically
        function loadPage(page) {
            const mainContent = document.getElementById('main-content');
            let content = '';

            switch (page) {
                case 'outpass-request':
                    content = `
                        <h2>Outpass Request Form</h2>
                        <div class="form-container">
                                        <form method="post" action="/warden">
<label>student name</label>        
<input type="text" name="name" id="name" required>

<label>Student ID:</label> 
<input type="text" name="idNo" id="idNo" required>
<label>Dorm Number:</label> 
<input type="text" name="dormNo" id="dormNo" required>
<label>Branch:</label> 
<input type="text" name="branch" id="branch" required>

<label>Year:</label> 
<input type="number" name="year" id="year" required>


<label>Expected Out-time:</label> 
<input type="datetime-local" name="expectedOutTime" id="expectedOutTime" >

<label>Expected In-time:</label> 
<input type="datetime-local" name="expectedInTime" id="expectedInTime" >

<label>Cause of Outpass:</label> 
<input type="text" name="causeOfOutpass" id="causeOfOutpass" required>

<label>Phone Number:</label> 
<input type="text" pattern="[0-9]*" name="phoneNumber" inputmode="numeric">


<label>Going Place:</label> 
<input type="text" name="goingPlace" id="goingPlace" required>

<label>Actual Out-time:</label> 
<input type="datetime-local" name="actualOutTime" id="actualOutTime">

<label>Actual In-time:</label> 
<input type="datetime-local" name="actualInTime" id="actualInTime">

                <button type="submit">Submit</button>
            </form>
                        </div>
                        <div id="outpass-result" style="margin-top: 20px;"></div>
                    `;
                    break;
                case 'today-status':
                    content = `
                <h2>Today's Outpass List</h2>
                <table border="1">
                    <thead>
                        <tr>
                            <th>Student ID</th>
                            <th>Name</th>
                            <th>Branch</th>
                            <th>Expected Out-time</th>
                            <th>Expected In-time</th>
                            <th>Cause</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${
                            outing.todayOutpasses.length > 0
                            ? outing.todayOutpasses.map(op => `
                                <tr>
                                    <td>${op.idNo}</td>
                                    <td>${op.name}</td>
                                    <td>${op.branch}</td>
                                    <td>${new Date(op.expectedOutTime).toLocaleString()}</td>
                                    <td>${new Date(op.expectedInTime).toLocaleString()}</td>
                                    <td>${op.causeOfOutpass}</td>
                                    <td>${op.actualOutTime ? "Approved" : "Pending"}</td>
                                </tr>
                            `).join("")
                            : `<tr><td colspan="7" style="text-align:center;">No Outpasses Today</td></tr>`
                        }
                    </tbody>
                </table>
                    `;
                    break;
                case 'past-data':
                    content = `
                        <h2>Past Data</h2>
                        <input type="date" id="past-date" onchange="loadPastData()">
                        <div id="past-data-result" style="margin-top: 20px;"></div>
                    `;
                    break;
                case 'pending-students':
                    console.log(outing)
                    const pendingStudents = outing.totalOutpass.filter(op => 
  new Date(op.expectedInTime) < new Date() &&
  (op.actualInTime === null || op.actualInTime === undefined)
);

                    content = `
                        <h2>Pending Students</h2>
                        <table>
                            <thead>
                                <tr>
                                    <th>Student ID</th>
                                    <th>Name</th>
                                    <th>Branch</th>
                                    <th>Phone</th>
                                </tr>
                            </thead>
                            <tbody>
                                ${pendingStudents.map(op => `
                                    <tr>
                                        <td>${op.idNo}</td>
                                        <td>${op.name}</td>
                                        <td>${op.branch}</td>
                                        <td>${op.phoneNumber}</td>
                                    </tr>
                                `).join('')}
                            </tbody>
                        </table>
                    `;
                    break;
                case 'search':
                    content = `
                        <h2>Search Student</h2>
                        <div class="form-container">
                            <input type="text" placeholder="Enter Student ID" id="search-id">
                            <button onclick="searchStudent()">Search</button>
                        </div>
                        <div id="search-result" style="margin-top: 20px;"></div>
                    `;
                    break;
                default:
                    content = `<h2>Welcome to Warden Portal</h2><p>Select an option from the sidebar to manage outpasses.</p>`;
            }

            mainContent.innerHTML = content;
        }

        // Function to submit outpass request
        function submitOutpassRequest() {
            const studentId = document.getElementById('student-id').value;
            const studentName = document.getElementById('student-name').value;
            const branch = document.getElementById('branch').value;
            const year = document.getElementById('year').value;
            const expectedCheckin = document.getElementById('checkin-date').value;
            const cause = document.getElementById('cause').value;
            const phone = document.getElementById('phone').value;

            // Check if the student already exists
            let student = students.find(s => s.id === studentId);

            if (!student) {
                // Add new student with 6 outpasses
                student = {
                    id: studentId,
                    name: studentName,
                    branch: branch,
                    year: year,
                    outpassCount: 6, // Initialize with 6 outpasses
                };
                students.push(student);
                localStorage.setItem('students', JSON.stringify(students));
            }

            // Check if the student has outpasses remaining
            if (student.outpassCount <= 0) {
                document.getElementById('outpass-result').innerHTML = `<p style="color: red;">Outpass denied. Student has used all 6 outpasses.</p>`;
                return;
            }

            // Create outpass request
            const outpass = {
                studentId: studentId,
                studentName: studentName,
                branch: branch,
                year: year,
                expectedCheckin: expectedCheckin,
                cause: cause,
                phone: phone,
                date: new Date().toISOString().split('T')[0],
                status: 'Pending'
            };

            outpassData.push(outpass);
            localStorage.setItem('outpassData', JSON.stringify(outpassData));

            // Decrement outpass count
            student.outpassCount -= 1;
            localStorage.setItem('students', JSON.stringify(students));

            // Send student details to Security Portal
            securityData.push(outpass);
            localStorage.setItem('securityData', JSON.stringify(securityData));

            // Update Today's Approved Page
            loadPage('today-status');

            document.getElementById('outpass-result').innerHTML = `<p style="color: green;">Outpass request submitted successfully. Remaining outpasses: ${student.outpassCount}</p>`;
        }
        // Function to load past data
        function loadPastData() {
            const date = document.getElementById('past-date').value;
            const pastData = outing.totalOutpass.filter(op => new Date(op.expectedOutTime).toISOString().split('T')[0] === date);
            console.log(pastData)
            const result = document.getElementById('past-data-result');
            result.innerHTML = `
                <table>
                    <thead>
                        <tr>
                            <th>Student ID</th>
                            <th>Name</th>
                            <th>Branch</th>
                            <th>Expected Check-in</th>
                            <th>Cause</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${pastData.map(op => `
                            <tr>
                                <td>${op.idNo}</td>
                                <td>${op.name}</td>
                                <td>${op.branch}</td>
                                <td>${new Date(op.expectedInTime).toISOString().split('T')[0]}</td>
                                <td>${op.causeOfOutpass}</td>
                            </tr>
                        `).join('')}
                    </tbody>
                </table>
            `;
        }

        // Function to search student
        function searchStudent() {
            const studentId = document.getElementById('search-id').value;
            const student = outing.students.filter(op => op.idNo === studentId);
            const result = document.getElementById('search-result');
            console.log(student);
            if (!student) {
                result.innerHTML = `<p style="color: red;">Student not found.</p>`;
                return;
            }

            result.innerHTML = `
                <h3>Student Details</h3>
                <p><strong>ID:</strong> ${student[0].idNo}</p>
                <p><strong>Name:</strong> ${student[0].name}</p>
                <p><strong>Year:</strong> ${student[0].year}</p>
                <p><strong>Branch:</strong> ${student[0].branch}</p>
                <p><strong>Remaining Outpasses:</strong> ${student[0].totalOutpassesAllowed-student[0].outpassesUsed}</p>
                <h3>Outpass History</h3>
               
          
                </table>
            `;
        }

        // Logout Functionality
        function logout() {
            // Prevent back button navigation
            window.location.replace('login.html');
            window.history.pushState(null, '', 'login.html');
        }
        console.log(warden);
        document.querySelectorAll('.sidebar ul li a').forEach(link => link.classList.remove('active'));
        event.target.classList.add('active');

    </script>
</body>

</html>